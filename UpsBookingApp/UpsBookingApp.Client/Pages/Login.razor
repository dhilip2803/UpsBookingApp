@page "/"
@using UPSBookingApp.Client.Services
@using UpsBookingApp.Client.Models
@inject HttpClient Http
@inject NavigationManager Nav
@inject UserContext UserContext
@rendermode InteractiveWebAssembly

<h3>Login</h3>

<div class="form-group">
    <label>User ID</label>
    <input class="form-control" @bind="inputUserId" />
</div>

<button class="btn btn-primary mt-3" @onclick="LoginUser">Login</button>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}

@code {
    private string inputUserId = "";
    private string errorMessage = "";

    private async Task LoginUser()
    {
        if (string.IsNullOrWhiteSpace(inputUserId))
        {
            errorMessage = "Please enter a valid User ID.";
            return;
        }

        try
        {
            var user = await Http.GetFromJsonAsync<User>($"api/BookingApi/validate/{inputUserId}");
            if (user != null)
            {
                // Set login user context
                UserContext.UserId = user.UserId;
                UserContext.UserName = user.Name;
                UserContext.Role = user.Role;

                // Redirect to main booking page
                Nav.NavigateTo("/desk-booking");
            }
        }
        catch
        {
            errorMessage = "Invalid User ID. Please try again.";
        }
    }
}
